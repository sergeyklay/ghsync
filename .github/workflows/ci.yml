# Copyright (C) 2020, 2021 Serghei Iakovlev <egrep@protonmail.ch>
#
# This file is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.

name: CI

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'release/**'
      - 'fix/**'

  pull_request:
    branches:
      - master

  schedule:
    - cron: '0 12 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

env:
  PYTHONUNBUFFERED: '1'

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.7'
          - '3.8'
          - '3.9'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        # TODO: Fix windows support
        #
        # 'pypy-3.7':
        # python -m venv --prompt gstore .venv
        # Unable to copy 'C:\\hostedtoolcache\\windows\\PyPy\\3.7.10\\x86\\venvlauncher.exe'
        # Error: [WinError 2] The system cannot find the file specified
        #
        # '3.10.0-beta - 3.10':
        # AttributeError: module 'collections' has no attribute 'Callable'
        # See:
        # - https://bugzilla.redhat.com/show_bug.cgi?id=1926358
        # - https://bugzilla.redhat.com/show_bug.cgi?id=1935571
        # - https://bugzilla.redhat.com/show_bug.cgi?id=1944533
        include:
          - python: 'pypy-3.7'
            os: ubuntu-latest
          - python: 'pypy-3.7'
            os: macos-latest
          - python: '3.10.0-beta - 3.10'
            os: ubuntu-latest
          - python: '3.10.0-beta - 3.10'
            os: macos-latest
          #- python: '3.10.0-beta - 3.10'
          #  os: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip --use-feature=in-tree-build install tox tox-gh-actions

      - name: Makefile selftest
        run: make help

      - name: Setuptools self-test
        run: |
          python setup.py --fullname
          python setup.py --long-description
          python setup.py --classifiers

      - name: Set up virtualenv
        run: |
          python -m pip install --upgrade pip
          pip --use-feature=in-tree-build install \
            tox \
            tox-gh-actions

      - name: Run unit tests with coverage
        run: tox

      # Use a modern Python version for combining coverage
      - name: Set up Python 3.10
        uses: actions/setup-python@v2.2.2
        if: ${{ matrix.python != '3.10.0-beta - 3.10' }}
        with:
          python-version: '3.10.0-beta - 3.10'

      - name: Combine coverage reports
        run: tox -e coverage-report

      - name: Upload coverage report
        if: success()
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          pip --use-feature=in-tree-build install coveralls
          coveralls

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5
